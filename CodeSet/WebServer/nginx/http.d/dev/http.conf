# 1) 캐시 저장소 정의 (cache path & zone)
proxy_cache_path /Users/v/SUN_RAT/QUEEN/BrainBuddy_BE/CodeSet/WebServer/cache
                 levels=1:2
                 keys_zone=ranklist:10m
                 inactive=3h
                 max_size=1g
                 use_temp_path=off;

# HTTP Server Block
# dev - port = 8000 / prod - port = 80
server {
    listen 8000;
    server_name localhost;

    root  /Users/v/SUN_RAT/QUEEN/BrainBuddy_BE/CodeSet/WebServer/public/dist;
    index index.html;

    # # 정적 자원 캐싱 (해시 파일명은 immutable)
    # location ~* \.(?:js|css|png|jpg|jpeg|gif|svg|webp|ico|ttf|otf|woff|woff2)$ {
    #     try_files $uri =404;
    #     expires 1y;
    #     add_header Cache-Control "public, immutable";
    #     access_log off;
    # }

    # # index.html 은 캐시 금지 (Cache-Control: no-cache)
    # location = /index.html {
    #     add_header Cache-Control "no-cache";
    # }

    # # SPA Fallback: /anything → /index.html
    # location / {
    #     try_files $uri $uri/ /index.html;
    # }

    # 보안 헤더(Security Headers)
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-Frame-Options "SAMEORIGIN" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;


    # /api/dashboard/weekly-ranking API 요청
    # 추후, 3~6 시간 주기로 weekly-ranking 을 정렬하고, 캐싱한 후 해당 데이터 전송으로..
    location = /api/dashboard/weekly-ranking {
        set $rank_cache_key "weekly-ranking";
        
        proxy_cache             ranklist;
        proxy_cache_key         $rank_cache_key;

        proxy_cache_valid 200   2h;
        
        proxy_cache_background_update on;
        proxy_cache_use_stale updating error timeout invalid_header http_500 http_502 http_503 http_504;
        proxy_cache_revalidate on;
        proxy_cache_lock on;
        proxy_cache_lock_age 5s;
        proxy_cache_lock_timeout 10s;

        proxy_hide_header Set-Cookie;

        add_header Content-Type application/json;
        add_header X-Cache $upstream_cache_status always;
        add_header X-Cache-Key $rank_cache_key always;

        proxy_pass http://was_backend;
        proxy_http_version 1.1;
        proxy_set_header Connection "";

        proxy_set_header Host              $host;
        proxy_set_header X-Real-IP         $remote_addr;
        proxy_set_header X-Forwarded-For   $proxy_add_x_forwarded_for;
        proxy_set_header X-Forwarded-Proto $scheme;

        proxy_connect_timeout 1s;
        proxy_send_timeout    5s;
        proxy_read_timeout    10s;
        proxy_next_upstream_timeout 6s;
        proxy_next_upstream error timeout invalid_header http_502 http_503 http_504;
        proxy_next_upstream_tries 3;
    }

    error_page 404 /errors/404.html;
    error_page 405 /errors/405.html;
    error_page 502 /errors/502.html;
    error_page 504 /errors/504.html;

    location = /errors/404.html { internal; }
    location = /errors/405.html { internal; }
    location = /errors/502.html { internal; }
    location = /errors/504.html { internal; }
}

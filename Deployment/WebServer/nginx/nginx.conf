# ====== Global ======
user  www-data;
worker_processes auto;

# ====== Events ======
events { 
    worker_connections 2048;
}

# ====== HTTP Context (L7) ======
http {
    include       /etc/nginx/mime.types;
    default_type  application/octet-stream;

    # 로그 포맷(log_format) & 로그 경로(access_log/error_log)
    log_format main '$remote_addr - $remote_user [$time_local] "$request" '
                    '$status $body_bytes_sent "$http_referer" '
                    '"$http_user_agent" "$http_x_forwarded_for"';
    access_log /var/log/nginx/brainbuddy_access.log main;
    error_log  /var/log/nginx/brainbuddy_error.log  warn;

    client_max_body_size 2m;
    client_body_buffer_size 256k;
    proxy_request_buffering on;
    proxy_buffering on;

    # WebSocket 업그레이드 헤더 헬퍼(map)
    map $http_upgrade $connection_upgrade {
        default upgrade;
        ''      close;
    }

    # 공통 스니펫
    include /home/ubuntu/WebServer/nginx/snippets/*.conf;

    # --- upstream WAS pool : least_conn ---
    upstream was_backend {
        zone was_backend 128k; 
        least_conn;
        server 10.0.142.149:8000 max_fails=3 fail_timeout=10s;
        # 기존의 계획은 최소 3개의 WAS 인스턴스를 계획했으나, 예산 문제로 1개의 인스턴스에 대해서 로드밸런싱을 하고 있습니다..
        keepalive 64;
    }

    # --- upstream WS pool : least_conn ---
    upstream ws_backend {
        zone ws_backend 128k;
        least_conn;
        server 10.0.131.35:9000 max_fails=3 fail_timeout=10s;
        # 기존의 계획은 최소 3개의 WS 인스턴스를 계획했으나, 예산 문제로 1개의 인스턴스에 대해서 로드밸런싱을 하고 있습니다..
    }

    # 서버블록(HTTP / HTTPS) 모음
    include /home/ubuntu/WebServer/nginx/http.d/*.conf;

    sendfile on;
    keepalive_timeout 65;
    server_tokens off; 
}
# ===============================
